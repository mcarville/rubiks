apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-flh9j
    field.cattle.io/publicEndpoints: '[{"nodeName":"c-dk4n2:m-9e844721a0bc","addresses":["192.168.1.21"],"port":9092,"protocol":"TCP","podName":"default:kafka-for-rubiks-67fd6987dc-rsggg","allNodes":false},{"nodeName":"c-dk4n2:m-9e844721a0bc","addresses":["192.168.1.21"],"port":9000,"protocol":"TCP","podName":"default:kafka-for-rubiks-67fd6987dc-rsggg","allNodes":false}]'
  creationTimestamp: null
  generation: 1
  labels:
    workload.user.cattle.io/workloadselector: deployment-default-kafka-for-rubiks
  name: kafka-for-rubiks
  selfLink: /apis/apps/v1beta2/namespaces/default/deployments/kafka-for-rubiks
spec:
  paused: true
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-kafka-for-rubiks
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":9092,"dnsName":"kafka-for-rubiks-hostport","hostPort":9092,"kind":"HostPort","name":"9092tcp90920","protocol":"TCP","sourcePort":9092},{"containerPort":9000,"dnsName":"kafka-for-rubiks-hostport","hostPort":9000,"kind":"HostPort","name":"9000tcp90000","protocol":"TCP","sourcePort":9000}]]'
        field.cattle.io/publicEndpoints: '[{"addresses":["192.168.1.21"],"nodeId":"c-dk4n2:m-9e844721a0bc","port":9092,"protocol":"TCP"},{"addresses":["192.168.1.21"],"nodeId":"c-dk4n2:m-9e844721a0bc","port":9000,"protocol":"TCP"}]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-kafka-for-rubiks
    spec:
      containers:
      - env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: kafka-for-rubiks
        image: mcarville/sandbox:ha_kafka_5
        imagePullPolicy: IfNotPresent
        name: kafka-for-rubiks
        ports:
        - containerPort: 9092
          hostPort: 9092
          name: 9092tcp90920
          protocol: TCP
        - containerPort: 9000
          hostPort: 9000
          name: 9000tcp90000
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
