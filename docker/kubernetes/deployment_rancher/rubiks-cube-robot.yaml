apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-flh9j
  creationTimestamp: null
  generation: 1
  labels:
    workload.user.cattle.io/workloadselector: deployment-default-rubiks-cube-robot
  name: rubiks-cube-robot
  selfLink: /apis/apps/v1beta2/namespaces/default/deployments/rubiks-cube-robot
spec:
  paused: true
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-rubiks-cube-robot
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-rubiks-cube-robot
    spec:
      containers:
      - env:
        - name: KAFKA_BROKER_HOST
          value: kafka-for-rubiks
        image: mcarville/sandbox:rubiks-cube-robot
        imagePullPolicy: IfNotPresent
        name: rubiks-cube-robot
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
